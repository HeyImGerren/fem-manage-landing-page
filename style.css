:root {
  /* darker orange */
  --clr-accent-500: hsl(12, 60%, 45%);
  /* main orange */
  --clr-accent-400: hsl(12, 88%, 59%);
  /* hover orange */
  --clr-accent-300: hsl(12, 88%, 75%);
  /* lighter orange */
  --clr-accent-100: hsl(13, 100%, 96%);
  /* blue */
  --clr-primary-400: hsl(228, 39%, 23%);
  /* white */
  --clr-neutral-900: hsl(232, 12%, 13%);
  --clr-neutral-100: hsl(0, 0%, 100%);
  
  /* font-family primary */
  --ff-primary: 'Be Vietnam Pro', sans-serif;

  --ff-body: var(--ff-primary);
  --ff-heading: var(--ff-primary);

  /* font weights */
  --fw-regular: 400;
  --fw-semi-bold: 500;
  --fw-bold: 700; 

  /* font size */
  /* 13px */
  --fs-300: .8125rem;
  /* 14px */
  --fs-400: .875rem; 
  /* 15px */
  --fs-500: .9375rem;
  /* 16px */
  --fs-600: 1rem;
  /* 30px */
  --fs-700: 1.875rem;
  /* 40px */
  --fs-800: 2.5rem;
  /* 56px */
  --fs-900: 3.5rem;

  --fs-body: var(--fs-400);
  --fs-primary-heading: var(--fs-800);
  --fs-secondary-heading: var(--fs-700);
  --fs-nav: var(--fs-500);
  --fs-button: var(--fs-300);

  /* padding sizes for spacing between elements */
  --size-200: .25rem;
  --size-200: .5rem;
  --size-300: .75rem;
  --size-400: 1rem;
  --size-500: 1.5rem;
  --size-600: 2rem;
  --size-700: 3rem;
  --size-800: 4rem;
  --size-900: 5rem;
}

/* big screens? */
@media (min-width: 50em) {
  :root {
    --fs-body: var(--fs-500);
    --fs-primary-heading: var(--fs-900);
    --fs-secondary-heading: var(--fs-800);
    --fs-nav: var(--fs-300);
  }
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin, this was modified to the below settings */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}

/* Set core body defaults, took out min-height because of the above code we added in height: 100% */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with, we added in svg to the list */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* GENERAL STYLING */
body {
  font-size: var(--fs-body);
  font-family: var(--ff-body);
  color: var(--clr-primary-400);
}

/* we use the :not([class]) in order to not target the "Simplify how your team..." paragraph so the opacity of that does not drop */
p:not([class]){
  opacity: 0.7;
  /* it's important to do a max-width here because you're saying to not get any smaller than the value you specify */
  /* ch is a character unit */
  max-width: 32ch;
}

/* since we want the paragraphs in the section with the lists to stretch further, so we tag on the data attribute */
p[data-width="wide"] {
  max-width: 42ch;
}

/* BUTTON */
.button {
  /* good to display buttons as inline-flex in case you needed to add icons or something to them */
  display: inline-flex;
  cursor: pointer;
  text-decoration: none;
  border: 0;
  /* 100vmax is a huge number that makes the button pill shaped */
  border-radius: 100vmax;
  padding: 1.25em 2.5em;
  font-weight: var(--fw-bold);
  font-size: var(--fs-button);
  /* makes the top and bottom of the button shrink down a bit to look more center, but we need a little more padding when we do this so the top and bottom padding changed from 1em to 1.25em */
  line-height: 1;
  color: var(--clr-neutral-100);
  background-color: var(--clr-accent-400);
  /* offset-x |  offset-y | blur-radius (larger the value, greater the blur) | spread-radius (negative value to shrink shadow inward) | color */
  box-shadow: 0 1.125em 1em -1em var(--clr-accent-500);
}

.button[data-type= "inverted"] {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-400);
}

.button:hover,
.button:focus-visible {
  background-color: var(--clr-accent-300);
}

.button[data-type= "inverted"]:hover,
.button[data-type= "inverted"]:focus-visible {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-300);
}

/* NAVIGATION */
.primary-header {
  padding-top: var(--size-700);
}

.nav-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.mobile-nav-toggle {
  display: none;
}

/* this goes outside the media query because the font size doesn't change between screen sizes */
.nav-list {
  font-size: var(--fs-nav);
}

.nav-list {
  display: flex;
  /* setting a clamp on the gap between the nav items makes it so that when the screen re-sizes, the nav items will not continue to grow infinitely, the spacing will always be controlled */
  /* clamp(min, preferred value, max)*/
  /* min: this is the lower bound in the range, if the preferred value is less than this value, the minimum value will be used */
  /* preferred value: the preferred value is the expression whose value will be used as long as the page is between the min and max values */
  /* max: this value will be used if preferred value is greater than this upper bound */
  gap: clamp(var(--size-400), 5vw, var(--size-700));
  font-weight: var(--fw-semi-bold);
}

.nav-list a {
  text-decoration: none;
  color: var(--clr-primary-400);
}

.nav-list a:hover,
.nav-list a:focus {
  color: var(--clr-accent-400);
}

@media (max-width: 50em) {
  .primary-navigation {
    display: none; 
    
    /* we keep this as fixed you want it to stay fixed with the screen since the toggle button is also fixed */
    position: fixed;
    padding: var(--size-700);
    /* inset is top | left and right | auto makes the bottom match the height of the element */
    inset: 7rem var(--size-400) auto;
    max-width: 25rem;
    margin-left: auto;
    background: var(--clr-neutral-100);
    border-radius: var(--size-100);
    box-shadow: 0 0 0.75em rgb(0, 0, 0, 0.05);
  }

  .primary-header[data-overlay]::before {
    /* You always need this content property with the pseudo element */
    content: '';
    position: fixed;
    inset: 0;
    /* rgb (0 0 0 / 0) is transparent */
    background-image: linear-gradient(rgb(0 0 0 / 0), rgb(0 0 0 / 0.8));
  }

  .nav-list {
    display: grid;
    gap: var(--size-600);
    text-align: center;
    font-weight: var(--fw-bold);
  }

  .primary-navigation[data-visible] {
    display: block;
  }

  .mobile-nav-toggle {
    /* needs to be position fixed because we changed the nav element to be a pseudo element so that the gradient would apply, if the display was not fixed, then we couldn't click it when the menu was toggled */
    display: block;
    position: fixed;
    top: var(--size-600);
    right: var(--size-400);
    z-index: 100;
    cursor: pointer;
    background: transparent;
    border: 0;
    padding: .5em;
  }
  
  .mobile-nav-toggle .icon-close {
    display: none;
  }
}



/* Utility Classes */
/* NOTE: because of the cascade, it is good to have your utility classes at the bottom of the styling sheet so that they always win out over the other styles that may override them */
.visually-hidden {
  position: absolute;
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0,0,0,0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.container {
  /* this is the max width of a container (taken from the figma file */
  --max-width: 1110px;
  /* this is the padding on either side on your page */
  --padding: 1rem;

  /* will apply whichever property is smaller */
  /* 100% - var(--padding) stops the content from sticking to the side of the screen at smaller screen sizes, in the figma file, you can see at smaller screen sizes there is a 16px (1 rem) padding on either side of the container, but you want it to be *2 so that it's on either side */
  width: min(var(--max-width), 100% - (var(--padding) * 2));
  /* this is essentially centering the content */
  margin-inline: auto;
}

/* technique taken from Andy Bell, it chooses every sibling other than the first thing in the div */
/* .flow > * + * {
  outline: 3px solid lime;
} */

/* the benefit to this is that the specificity is 0 so if you want to change it elsewhere in the code, you can override it easily */
/* notice how we do not select the first child because the first child stays in place, we just want the children to have spacing from the first child */
:where(.flow > :not(:first-child)) {
  /* this makes it so that if --flow-spacer is not defined, it will use 1em */
  margin-top: var(--flow-spacer, 3em);
}

.even-columns {
  display: grid;
  gap: 1rem;
}

/* note: em is one of the only units that is consistent across all browsers when you are zooming in and out */
/* 50em is for bigger screens */
@media (min-width: 50em) {
  .even-columns {
    /* gives us the column layout */
    grid-auto-flow: column;
    /* gives us evenly sized columns, fr is a fractional unit, so this is saying each column will take up 1 part of the available space, which is why there are two equal columns*/
    grid-auto-columns: 1fr;
  }
}

.text-primary-400 {
  color: var(--clr-primary-400);
}

.text-accent-400 {
  color: var(--clr-accent-400);
}

.text-accent-100 {
  color: var(--clr-accent-100);
}

.text-neutral-100 {
  color: var(--clr-neutral-100);
}

.text-neutral-900 {
  color: var(--clr-neutral-900);
}

.bg-primary-400 {
  background-color: var(--clr-primary-400);
}

.bg-accent-400 {
  background-color: var(--clr-accent-400);
}

.bg-accent-100 {
  background-color: var(--clr-accent-100);
}

.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}

.bg-neutral-900 {
  background-color: var(--clr-neutral-900);
}

.fw-bold { font-weight: var(--fw-bold); }
.fw-semi-bold { font-weight: var(--fw-semi-bold); }
.fw-regular { font-weight: var(--fw-regular); }

.fs-primary-heading {
  font-size: var(--fs-primary-heading);
  /* fixes the wonky line height */
  line-height: 1.1;
}

.fs-secondary-heading {
  font-size: var(--fs-secondary-heading);
  line-height: 1.1;
}

.fs-300 { font-size: var(--fs-300); }
.fs-400 { font-size: var(--fs-400); }
.fs-500 { font-size: var(--fs-500); } 
.fs-600 { font-size: var(--fs-600); } 

/* top and bottom padding */
/* this is the spacing between the blocks */
.padding-block-900 {
  padding-block: var(--size-900);
}

.padding-block-700 {
  padding-block: var(--size-700);
}

.display-sm-none {
  display: none;
}

/* larger screens, currently working with nav bar for this one to have the get started button display differently */
@media (min-width: 50em) {
  .display-md-inline-flex {
    display: inline-flex;
  }
}
